//Parameters
@mixin background-size($value) {
  -webkit-background-size: $value;
  background-size: $value;
}
@mixin box-sizing($value) {
  -webkit-box-sizing: $value;
  -moz-box-sizing: $value;
  box-sizing: $value;
}
@mixin box-shadow($value) {
  -webkit-box-shadow: $value;
  -moz-box-shadow: $value;
  box-shadow: $value;
}
@mixin border-radius($value) {
  -webkit-border-radius: $value;
  -moz-border-radius: $value;
  border-radius: $value;
}
@mixin transform($value) {
  -webkit-transform: $value;
  -moz-transform: $value;
  -ms-transform: $value;
  -o-transform: $value;
  transform: $value;
}
@mixin transform-origin($value) {
  -webkit-transform-origin: $value;
  -moz-transform-origin: $value;
  -ms-transform-origin: $value;
  -o-transform-origin: $value;
  transform-origin: $value;
}
@mixin clip-path($value) {
  -webkit-clip-path: $value;
  clip-path: $value;
}
@mixin transition($value, $prefixes:false) {
  @if $prefixes {
    @if $prefixes==all {
      $prefixes:webkit moz o;
    }
    @each $prefix in $prefixes {
      -#{$prefix}-transition:-#{$prefix}-#{$value};
    }
    transition:$value;
  }
  @else {
    -webkit-transition: $value;
    -moz-transition: $value;
    -o-transition: $value;
    transition: $value;
  }
}
@mixin transition-property($value, $prefixes:false) {
  -webkit-transition-property: $value;
  -moz-transition-property: $value;
  -o-transition-property: $value;
  transition-property: $value;
}
@mixin animation($value) {
  -webkit-animation: $value;
  -moz-animation: $value;
  -o-animation: $value;
  animation: $value;
}
@mixin keyframes($name) {
  @-webkit-keyframes #{$name}{
    @content;
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
}
@mixin box-shadow($value) {
  -webkit-box-shadow: $value;
  -moz-box-shadow: $value;
  box-shadow: $value;
}
@mixin filter($value) {
  -webkit-filter: $value;
  filter: $value;
}
@mixin user-select($value) {
  -webkit-user-select: $value;
  -moz-user-select: $value;
  -ms-user-select: $value;
  user-select: $value;
}
@mixin filter($value) {
  -webkit-filter:$value;
  filter:$value;
}
//End: Parameters
@mixin font($family, $path, $filename, $weight, $style, $local:'') {
  @font-face {
    @if($local!=''){
      $local: local($family+' '+$local), local($filename);
    }
    @else {
      $local: local($family);
    }
    font-family: $family;
    src: $local, url($path + $filename + '.woff2') format('woff2'),
    url($path + $filename + '.woff') format('woff'),
    url($path + $filename + '.ttf') format('truetype');
    font-weight: $weight;
    font-style: $style;
    font-display: auto;
  }
}
@mixin fontAll($family, $fileName) {
  $path:$site+'fonts/'+$fileName+'/';
  //@include font($family, $path, $fileName + '-Light', 300, normal, 'Light');
  //@include font($family, $path, $fileName + '-LightItalic', 300, italic, 'Light Italic');
  @include font($family, $path, $fileName + '-Regular', 400, normal);
  @include font($family, $path, $fileName + '-Italic', 400, italic, 'Italic');
  @include font($family, $path, $fileName + '-Medium', 500, normal, 'Medium');
  @include font($family, $path, $fileName + '-MediumItalic', 500, italic, 'Medium Italic');
  @include font($family, $path, $fileName + '-Bold', 700, normal, 'Bold');
  @include font($family, $path, $fileName + '-BoldItalic', 700, italic, 'Bold Italic');
  //@include font($family, $path, $fileName + '-Black', 900, normal, 'Black');
  //@include font($family, $path, $fileName + '-BlackItalic', 900, italic, 'Black Italic');
}
@mixin media($size, $do:true) {
  $plus:'';
  @if not $do {
    $plus: 'not all and';
  }
  @media #{$plus + '(max-width:'+$size+'px)'} {
    @content;
  }
}
@mixin placeholder($root:false) {
  $plus:'';
  @if not $root {
    $plus: '&';
  }
  #{$plus}:-ms-input-placeholder {
    @content;
  }
  #{$plus}::-ms-input-placeholder {
    @content;
  }
  #{$plus}::placeholder {
    @content;
  }
}
@mixin force($x:1, $y:1) {
  display:block;
  position:relative;
  width:100%;
  padding-top:100%*$y/$x;
  overflow:hidden;
  >* {
    display:block;
    position:absolute;
    top:0;
    left:0;
    right:0;
    bottom:0;
    width:100%;
    height:100%;
  }
  >img {
    object-fit: cover;
  }
}
@mixin opacity-bg($url, $opacity:0.3, $size:cover, $position:center center, $repeat:no-repeat) {
  background:linear-gradient(rgba(0,0,0,$opacity), rgba(0,0,0,$opacity)), url($url) $position $repeat;
  @include background-size($size);
}
@mixin h-circle($font-size, $padding-y:0, $line-height:1.4, $count-lines:1) {
  $line-height-real: $font-size*$line-height*$count-lines;
  $border-radius: $line-height-real/2 + $padding-y;
  padding-top:$padding-y;
  padding-bottom:$padding-y;
  font-size:$font-size;
  @include border-radius($border-radius);
}
@mixin m($styles, $value) {
  @each $style in $styles {
    #{$style}: $value;
  }
}
@mixin fa($unicode, $size:inherit) {
  content:unquote("\"")+unquote("\\")+$unicode+unquote("\"");
  display: inline-block;
  font: normal normal normal 14px/1 FontAwesome;
  font-size: $size;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
@mixin mv($parameters, $values, $multiplied:1) {
  @each $key,$value in $values {
    @if $key==default {
      @include m($parameters, $value*$multiplied);
    }
    @else {
      @include media($key) {
        @include m($parameters, $value*$multiplied);
      }
    }
  }
}
@mixin rotated-text() {
  width:1.1em;
  overflow:hidden;
  >span {
    display:table;
    >span {
      display:block;
      padding: 50% 0;
      >span {
        white-space:nowrap;
        display:block;
        @include transform(rotate(-90deg) translate(-100%));
        @include transform-origin(top left);
        margin: -50% 0 0 0;
        font-size:1em;
        line-height:1;
      }
    }
  }
}
@mixin container-by-percent($container-max-width, $container-width-percent, $block-width:100%) {
  $viewport-width: 100%*100%/$block-width;
  max-width: calc(#{$container-max-width/2} + #{100% - $viewport-width/2});
  width: 100% - ((100% - $container-width-percent) * 100% / (2 * $block-width));
}
@mixin set-padding($padding) {
  .py-s {
    padding-top: $padding;
    padding-bottom: $padding;
  }
  .py-2s {
    padding-top: 2*$padding;
    padding-bottom: 2*$padding;
  }
  .pt-s {
    padding-top:$padding;
  }
  .pb-s {
    padding-bottom:$padding;
  }
  .pt-2s {
    padding-top:2*$padding;
  }
  .pb-2s {
    padding-bottom:2*$padding;
  }
}
